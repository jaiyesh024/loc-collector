name: LOC Collector (Python)

on:
  workflow_dispatch:
    inputs:
      org:
        description: GitHub org or username to scan
        required: true
        default: jaiyesh024
      filter_regex:
        description: Repo name/desc regex
        required: false
        default: 'glue|lambda|etl|function|pipeline|misc|src'

permissions:
  contents: read

jobs:
  discover:
    runs-on: ubuntu-latest
    env:
      # Use PAT if provided; otherwise gh will run unauthenticated (ok for public repos)
      GH_TOKEN: ${{ secrets.ORG_READ_TOKEN }}
    outputs:
      repos: ${{ steps.set.outputs.repos }}
    steps:
      - name: Install jq (needed in this job)
        run: sudo apt-get update && sudo apt-get install -y jq
      - name: List repos and filter by name/description
        id: list
        run: |
          gh repo list "${{ github.event.inputs.org }}" --limit 100 --json name,description \
          | jq -r --arg re "${{ github.event.inputs.filter_regex }}" \
            '[ .[] | select((.name|test($re;"i")) or ((.description//"")|test($re;"i"))) | .name ]' \
            > repos.json
          echo "Found $(jq length repos.json) repos"
          cat repos.json
      - id: set
        run: echo "repos=$(jq -c . repos.json)" >> "$GITHUB_OUTPUT"

  count:
    needs: discover
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        repo: ${{ fromJson(needs.discover.outputs.repos) }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.org }}/${{ matrix.repo }}
          ref: master
          fetch-depth: 1
          token: ${{ secrets.ORG_READ_TOKEN }} # optional for public, required for private
      - run: sudo apt-get update && sudo apt-get install -y cloc jq
      - name: Count Python SLoC
        run: |
          echo "Files present:"
          ls -R | head -20
          PY=$(cloc --json --include-ext=py . 2>/dev/null | jq -r '.Python.code // 0')
          TYPE="unknown"
          (test -d glue || test -d glue_jobs || grep -ERiq '(glueContext|AWS::Glue|boto3\.client\(["'\'']glue'\'']\))' .) && TYPE="Glue"
          (test -d lambda || test -d functions || grep -ERiq '(lambda_handler|AWS::Lambda|boto3\.client\(["'\'']lambda'\'']\))' .) && TYPE=$([ "$TYPE" = "Glue" ] && echo "Glue+Lambda" || echo "Lambda")
          echo "repo,type,python_sloc" > result.csv
          echo "${{ matrix.repo }},${TYPE},${PY}" >> result.csv
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.repo }}-loc
          path: result.csv

  aggregate:
    needs: count
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: "*-loc"
          path: results
      - name: Merge & total
        run: |
          echo "repo,type,python_sloc" > sonar_loc_results.csv
          awk 'FNR==1 && NR!=1 {next} {print}' results/*/result.csv >> sonar_loc_results.csv
          TOTAL=$(awk -F, 'NR>1{sum+=$3} END{print sum+0}' sonar_loc_results.csv)
          echo "TOTAL,,${TOTAL}" >> sonar_loc_results.csv
          echo "## Python SLoC Total: ${TOTAL}" >> $GITHUB_STEP_SUMMARY
      - uses: actions/upload-artifact@v4
        with:
          name: sonar_loc_results.csv
          path: sonar_loc_results.csv
